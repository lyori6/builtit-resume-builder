import React, { useState } from 'react';
import { Download, Mail, Phone, MapPin, Globe, Linkedin } from 'lucide-react';

const PDFResumeGenerator = () => {
  const [resumeData] = useState({
    basics: {
      name: "Jensen Huang",
      headline: "Product Manager of Parallel Possibilities",
      email: "jensen@example.com",
      phone: "(650) 867-5309",
      location: "Santa Clara, CA (often on Mars)",
      url: {
        label: "jensen-huang.fun",
        href: "https://www.jensen-huang.fun"
      },
      customFields: [
        {
          id: "profile-linkedin",
          icon: "linkedin-logo",
          name: "linkedin.com/in/jensen",
          value: "https://www.linkedin.com/in/jensen"
        }
      ]
    },
    sections: {
      summary: {
        content:
          "Inventive product leader who once finished a capstone on a commuter rocket ride. Translates cosmic-scale ideas into launch-ready experiences, aligning engineers, marketers, and sentient toasters with equal patience."
      },
      experience: {
        items: [
          {
            company: "NVIDIA Labs",
            position: "Product Manager | Holographic Collaboration",
            location: "Santa Clara, CA & Orbit",
            date: "Aug 2023 – Present",
            summary:
              "• Owns an experimental meeting-without-gravity platform so remote teams can whiteboard in 3D.\n• Shipped auto-transcription for zero-gravity scribbles, improving meeting recall by 42%.\n• Coordinated launch with hardware, legal, and Martian customs on the first try.",
            url: {
              label: "Product teaser",
              href: "https://labs.nvidia.com/holo-collab"
            }
          },
          {
            company: "Saturn Rings Streaming",
            position: "Senior Associate Product Manager",
            location: "Remote (timezones +6 to -6)",
            date: "Jan 2021 – Jul 2023",
            summary:
              "• Led discovery for the solar system's streaming service for orbital tourists.\n• Introduced an AI curator nicknamed PopcornBot that tripled engagement with moon-volcano documentaries.\n• Mentored a team of four APMs; two now run product for Pluto's weather channel beta."
          },
          {
            company: "Nebula Capital",
            position: "Associate Product Manager",
            location: "San Francisco, CA",
            date: "Jul 2018 – Dec 2020",
            summary:
              "• Designed realtime dashboards for asteroid-mining startups, shrinking reporting time from hours to minutes.\n• Partnered with compliance to humanize risk messaging and cut 'galactic audit' tickets by 55%.\n• Co-led quarterly roadmap reviews with Jensen-in-the-Loop simulations to test investor reactions."
          },
          {
            company: "Cometary Systems",
            position: "Product Analyst",
            location: "Mountain View, CA",
            date: "Sep 2016 – Jun 2018",
            summary:
              "• Automated manual reporting with GPU-powered dashboards adopted company-wide.\n• Mapped onboarding friction points and lifted activation by 18% for interplanetary customers.\n• Presented monthly workshops on decoding Martian user feedback; localization score climbed to 95%."
          }
        ]
      },
      projects: {
        items: [
          {
            name: "GPU-Powered Espresso Queue",
            description:
              "Smart queueing app ensuring the espresso machine never idles during product sprints.",
            date: "2022",
            url: {
              label: "Demo reel",
              href: "https://www.jensen-huang.fun/espresso"
            }
          },
          {
            name: "Martian Rover OKR Tracker",
            description:
              "Goal-tracking app for student robotics teams navigating low gravity (objective: don't flip over).",
            date: "2020",
            url: {
              label: "Open source",
              href: "https://github.com/parallel-dreamer/rover-okrs"
            }
          }
        ]
      },
      skills: {
        items: [
          {
            name: "Product",
            keywords: [
              "Roadmapping",
              "Strategic Narratives",
              "AI Feature Design",
              "Experimentation",
              "Stakeholder Alignment"
            ]
          },
          {
            name: "Technical",
            keywords: [
              "GPU Architecture Basics",
              "Python",
              "TypeScript",
              "SQL",
              "Prompt Engineering"
            ]
          },
          {
            name: "Team",
            keywords: [
              "Public Speaking",
              "Mentorship",
              "Product Operations",
              "Workshop Facilitation",
              "Cross-Planet Collaboration"
            ]
          }
        ]
      },
      education: {
        items: [
          {
            institution: "Community College of the Planet Mars",
            studyType: "Associate of Science, Computer Science",
            date: "2016"
          },
          {
            institution: "NVIDIA Business School",
            studyType: "MBA, Interplanetary Strategy",
            date: "2018"
          }
        ]
      }
    }
  });

  const formatBulletPoints = (text) => {
    return text.split('\n').map((line, index) => {
      if (line.trim().startsWith('•')) {
        return (
          <li key={index} className="ml-4">
            {line.trim().substring(1).trim()}
          </li>
        );
      } else if (line.trim()) {
        return (
          <p key={index} className="mb-2 text-gray-700">
            {line.trim()}
          </p>
        );
      }
      return null;
    });
  };

  const generatePDF = () => {
    // Create a new window for printing to ensure it works in all environments
    const printWindow = window.open('', '_blank');
    const content = document.querySelector('.resume-content').innerHTML;
    
    printWindow.document.write(`
      <!DOCTYPE html>
      <html>
        <head>
          <title>Resume - ${resumeData.basics.name}</title>
          <script src="https://cdn.tailwindcss.com"></script>
          <style>
            @media print {
              body { -webkit-print-color-adjust: exact; color-adjust: exact; }
              @page { margin: 0.5in; size: letter; }
              .no-print { display: none !important; }
            }
            body { font-family: system-ui, -apple-system, sans-serif; }
          </style>
        </head>
        <body class="bg-white">
          ${content}
        </body>
      </html>
    `);
    
    printWindow.document.close();
    printWindow.focus();
    
    // Small delay to ensure content is loaded
    setTimeout(() => {
      printWindow.print();
      printWindow.close();
    }, 250);
  };

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Print button - hidden when printing */}
      <div className="print:hidden p-4 bg-white shadow-sm border-b">
        <div className="max-w-4xl mx-auto flex justify-between items-center">
          <h1 className="text-xl font-bold text-gray-900">Resume Generator</h1>
          <button
            onClick={generatePDF}
            className="flex items-center gap-2 bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 transition-colors"
          >
            <Download size={16} />
            Download PDF
          </button>
        </div>
      </div>

      {/* Resume content */}
      <div className="max-w-4xl mx-auto bg-white shadow-lg print:shadow-none print:max-w-none resume-content">
        {/* Header */}
        <div className="px-8 py-8 border-b border-gray-200 bg-gradient-to-r from-slate-50 to-white">
          <h1 className="text-4xl font-bold text-gray-900 mb-3 tracking-tight">
            {resumeData.basics.name}
          </h1>
          <p className="text-xl text-gray-700 mb-6 font-medium leading-relaxed">
            {resumeData.basics.headline}
          </p>
          
          {/* Contact Info */}
          <div className="flex flex-wrap gap-6 text-sm text-gray-600">
            <div className="flex items-center gap-2">
              <Mail size={16} className="text-blue-600" />
              <a href={`mailto:${resumeData.basics.email}`} className="hover:text-blue-600 transition-colors">
                {resumeData.basics.email}
              </a>
            </div>
            <div className="flex items-center gap-2">
              <Phone size={16} className="text-blue-600" />
              <span>{resumeData.basics.phone}</span>
            </div>
            <div className="flex items-center gap-2">
              <MapPin size={16} className="text-blue-600" />
              <span>{resumeData.basics.location}</span>
            </div>
            <div className="flex items-center gap-2">
              <Globe size={16} className="text-blue-600" />
              <a href={resumeData.basics.url.href} className="hover:text-blue-600 transition-colors">
                {resumeData.basics.url.label.trim()}
              </a>
            </div>
            <div className="flex items-center gap-2">
              <Linkedin size={16} className="text-blue-600" />
              <a href={resumeData.basics.customFields[0].value} className="hover:text-blue-600 transition-colors">
                {resumeData.basics.customFields[0].name}
              </a>
            </div>
          </div>
        </div>

        <div className="px-8 py-6 space-y-6">
          {/* Professional Summary */}
          <section>
            <h2 className="text-xl font-bold text-gray-900 mb-4 pb-2 border-b-2 border-blue-600 uppercase tracking-wide">
              Professional Summary
            </h2>
            <div className="bg-gray-50 p-6 rounded-xl shadow-sm">
              <p className="text-gray-700 leading-relaxed text-base">
                {resumeData.sections.summary.content}
              </p>
            </div>
          </section>

          {/* Professional Experience */}
          <section>
            <h2 className="text-xl font-bold text-gray-900 mb-4 pb-2 border-b-2 border-blue-600 uppercase tracking-wide">
              Professional Experience
            </h2>
            <div className="space-y-6">
              {resumeData.sections.experience.items.map((exp, index) => (
                <div key={index} className="bg-white border border-gray-200 rounded-xl p-6 shadow-sm hover:shadow-md transition-shadow">
                  <div className="flex justify-between items-start mb-3">
                    <div className="flex-1">
                      <h3 className="text-lg font-bold text-gray-900 mb-1">
                        {exp.position}
                      </h3>
                      <p className="text-blue-600 font-semibold flex items-center gap-2">
                        {exp.company}
                        {exp.url && (
                          <a href={exp.url.href} className="text-sm text-blue-500 hover:underline transition-colors">
                            ({exp.url.label})
                          </a>
                        )}
                      </p>
                    </div>
                    <div className="text-right text-sm text-gray-500 ml-4">
                      <p className="font-medium whitespace-nowrap">{exp.date}</p>
                      <p className="whitespace-nowrap">{exp.location}</p>
                    </div>
                  </div>
                  <div className="text-sm text-gray-700">
                    <ul className="list-disc list-outside ml-5 space-y-2">
                      {formatBulletPoints(exp.summary)}
                    </ul>
                  </div>
                </div>
              ))}
            </div>
          </section>

          {/* Recent Projects */}
          <section>
            <h2 className="text-xl font-bold text-gray-900 mb-4 pb-2 border-b-2 border-blue-600 uppercase tracking-wide">
              Recent Projects
            </h2>
            <div className="space-y-4">
              {resumeData.sections.projects.items.map((project, index) => (
                <div key={index} className="bg-gray-50 p-6 rounded-xl shadow-sm">
                  <div className="flex justify-between items-start mb-3">
                    <h3 className="text-lg font-bold text-gray-900 flex-1">
                      {project.name}
                    </h3>
                    <div className="text-right text-sm ml-4">
                      <p className="text-gray-500 font-medium whitespace-nowrap">{project.date}</p>
                      {project.url && (
                        <a href={project.url.href} className="text-blue-600 hover:underline transition-colors whitespace-nowrap">
                          {project.url.label}
                        </a>
                      )}
                    </div>
                  </div>
                  <p className="text-gray-700 text-sm leading-relaxed">
                    {project.description}
                  </p>
                </div>
              ))}
            </div>
          </section>

          {/* Skills */}
          <section>
            <h2 className="text-xl font-bold text-gray-900 mb-4 pb-2 border-b-2 border-blue-600 uppercase tracking-wide">
              Core Competencies
            </h2>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              {resumeData.sections.skills.items.map((skillCategory, index) => (
                <div key={index} className="bg-gray-50 p-6 rounded-xl shadow-sm">
                  <h4 className="font-bold text-gray-900 mb-4 text-sm uppercase tracking-wide">
                    {skillCategory.name}
                  </h4>
                  <div className="flex flex-wrap gap-2">
                    {skillCategory.keywords.map((skill, skillIndex) => (
                      <span
                        key={skillIndex}
                        className="bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-blue-200 transition-colors"
                      >
                        {skill}
                      </span>
                    ))}
                  </div>
                </div>
              ))}
            </div>
          </section>

          {/* Education */}
          <section>
            <h2 className="text-xl font-bold text-gray-900 mb-4 pb-2 border-b-2 border-blue-600 uppercase tracking-wide">
              Education
            </h2>
            <div className="bg-gray-50 p-6 rounded-xl shadow-sm">
              {resumeData.sections.education.items.map((edu, index) => (
                <div key={index} className="flex justify-between items-center">
                  <div>
                    <h3 className="font-bold text-gray-900 text-base">{edu.institution}</h3>
                    <p className="text-gray-700">{edu.studyType}</p>
                  </div>
                  <p className="text-gray-500 font-medium">{edu.date}</p>
                </div>
              ))}
            </div>
          </section>
        </div>
      </div>

      <style jsx>{`
        @media print {
          body {
            -webkit-print-color-adjust: exact;
            color-adjust: exact;
          }
          
          .print\\:shadow-none {
            box-shadow: none !important;
          }
          
          .print\\:max-w-none {
            max-width: none !important;
          }
          
          .print\\:hidden {
            display: none !important;
          }
          
          @page {
            margin: 0.5in;
            size: letter;
          }
        }
      `}</style>
    </div>
  );
};

export default PDFResumeGenerator;
